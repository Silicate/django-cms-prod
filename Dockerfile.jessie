# Licensed under the Apache License, Version 2.0 (see LICENSE.md)
FROM debian:jessie

# The Django-CMS site will be installed in /cms/website1
# this version has lots of Python errors, not all fixed

# Using python 2.7, because aldryn-people and aldryn-newsblog have a dependency problem with python 3
#    - https://github.com/aldryn/aldryn-people/issues/28

ENV LANG C.UTF-8
# Force stdin, stdout and stderr to be totally unbuffered. 
ENV PYTHONUNBUFFERED 1
ENV PIP_REQUIRE_VIRTUALENV false
# for nano editor etc.
ENV TERM xterm

# Django-CMS Installer defaults, that can be overridden with 'docker run -e ...'
ENV ADMIN_USER admin
ENV ADMIN_EMAIL admin@example.com
ENV ADMIN_PASSWD djangocms
ENV OPTIONS "--no-input --utc --languages en --languages de  --bootstrap yes --starting-page yes --filer"
ENV MODE production

# Install nginx & supervisor and a few utilities
RUN echo "deb http://http.debian.net/debian jessie-backports main" >> /etc/apt/sources.list && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install \
        build-essential \
        git \
        libjpeg-dev \
        libpq-dev \
        libxml2-dev \
        libxslt1-dev \
        nano \
        patch \
        postgresql-client \
        python \
        python-dev \
        python-setuptools \
        python-virtualenv \
        sqlite3 \
        supervisor \
        unzip \
        zip \
        zlib1g-dev && \
    DEBIAN_FRONTEND=noninteractive apt-get -y -t jessie-backports install \
        nginx && \
    apt-get clean && rm -r /var/lib/apt/lists/*

RUN easy_install pip

# If wanting to use virtualenv
#RUN virtualenv env
#RUN ["/bin/bash", "-c", "source env/bin/activate"]    

# Django-CMS with plugins & UWSGI installation
COPY ./requirements.txt /cms/requirements.txt
RUN pip install djangocms-installer && \
    pip install -r /cms/requirements.txt

# setup the config files
# forward request and error logs to supervisor logs
COPY ./config/ /cms/config/
RUN echo "daemon off;" >> /etc/nginx/nginx.conf && \
    rm -v /etc/nginx/sites-enabled/default && \
    ln -sv /cms/config/nginx-djangocms.conf /etc/nginx/sites-enabled/ && \
    ln -sv /cms/config/supervisor.conf /etc/supervisor/conf.d/ && \
    ln -svf /dev/stdout /var/log/nginx/access.log && \
    ln -svf /dev/stderr /var/log/nginx/error.log

# Persist site & user data
VOLUME [ "/cms" ]

EXPOSE 80 8000
WORKDIR /cms

COPY docker-entrypoint /docker-entrypoint

# Install Django-CMS on first-run of container
ENTRYPOINT ["/docker-entrypoint"]

CMD ["supervisord", "-n"]
